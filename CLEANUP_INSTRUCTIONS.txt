═══════════════════════════════════════════════════════════════
🚨 URGENT: CLEAN UP YOUR GITHUB REPOSITORY
═══════════════════════════════════════════════════════════════

Your db.php file with database credentials is currently PUBLIC on GitHub.
Follow these steps to secure your repository:

───────────────────────────────────────────────────────────────
STEP 1: Remove db.php from Git History
───────────────────────────────────────────────────────────────

Open PowerShell/Terminal in your project folder and run:

git rm --cached db.php
git add .gitignore db.example.php LICENSE SECURITY.md README.md
git commit -m "Security: Remove db.php and add security files"
git push origin main

───────────────────────────────────────────────────────────────
STEP 2: Decide on Repository Visibility
───────────────────────────────────────────────────────────────

Option A: MAKE REPOSITORY PRIVATE (Recommended for Internal Projects)
  1. Go to https://github.com/AnuNirmani/calendar-app/settings
  2. Scroll to "Danger Zone"
  3. Click "Change visibility" → "Make private"
  4. Only invited users can view/clone the code

Option B: KEEP IT PUBLIC (For Open Source)
  - Anyone can view, clone, and download the code
  - The MIT License protects your copyright but allows usage
  - Good for portfolio projects and open source contributions
  - Sensitive credentials are now protected with .gitignore

───────────────────────────────────────────────────────────────
STEP 3: Update Local Configuration
───────────────────────────────────────────────────────────────

Your local db.php is fine for development. Keep it, but it won't be
tracked by git anymore (thanks to .gitignore).

───────────────────────────────────────────────────────────────
UNDERSTANDING THE REALITY
───────────────────────────────────────────────────────────────

❌ PUBLIC REPO: You CANNOT prevent people from downloading/copying
✅ PRIVATE REPO: Only you and invited collaborators can access
✅ LICENSE: Legally protects copyright and defines usage terms
✅ .gitignore: Prevents accidentally committing sensitive files

───────────────────────────────────────────────────────────────
IMPORTANT NOTES
───────────────────────────────────────────────────────────────

✓ Your current db.php credentials (localhost, root, no password) are
  relatively safe since they only work on YOUR local machine.

✓ If you ever deploy to a production server with real credentials,
  NEVER commit those to the repository.

✓ The MIT License I added allows others to use your code but requires
  them to credit you. You can change it to a more restrictive license
  if needed (GPL, Apache 2.0, etc.)

═══════════════════════════════════════════════════════════════
Delete this file after reading: CLEANUP_INSTRUCTIONS.txt
═══════════════════════════════════════════════════════════════

